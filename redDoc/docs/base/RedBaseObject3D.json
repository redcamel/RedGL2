[
  {
    "title": "addFilter",
    "code": "METHOD",
    "description": "\n\t\tfilter 추가\n\t",
    "params": {
      "filter": [
        {
          "type": "RedBaseFilter Instance"
        }
      ]
    },
    "return": "void"
  },
  {
    "title": "addLOD",
    "code": "METHOD",
    "description": "\n\t LOD 추가.\n\t 추가시 geometry, material 둘중 하나는 반드시 입력되어야함.\n ",
    "params": {
      "level": [
        {
          "type": "Number"
        }
      ],
      "distance": [
        {
          "type": "Number"
        }
      ],
      "geometry": [
        {
          "type": "RedGeometry 확장 Instance"
        }
      ],
      "material": [
        {
          "type": "RedBaseMaterial 확장 Instance"
        }
      ]
    },
    "example": "\n             var tMesh = RedBaseObject3D Instance;\n             tMesh.useLOD = true; // LOD 사용 설정\n             tMesh.addLOD(0, 5, RedSphere(this, 0.5, 32, 32, 32), RedColorMaterial(this, '#00ff00')); // 0레벨 LOD 추가\n             tMesh.addLOD(1, 10, RedSphere(this, 0.5, 16, 16, 16), RedColorMaterial(this, '#00ff00')); // 1레벨 LOD 추가\n             tMesh.addLOD(2, 15, RedSphere(this, 0.5, 8, 8, 8), RedColorMaterial(this, '#00ff00')); // 2레벨 LOD 추가\n             tMesh.addLOD(3, 20, RedSphere(this, 0.5, 4, 4, 4), RedColorMaterial(this, '#00ff00')); // 3레벨 LOD 추가\n             tMesh.addLOD(4, 25, RedSphere(this, 0.5, 3, 3, 3), RedColorMaterial(this, '#00ff00')); // 4레벨 LOD 추가\n ",
    "return": "void"
  },
  {
    "code": "PROPERTY",
    "title": "autoUpdateMatrix",
    "description": "\n    matrix 자동계산여부.\n    true 설정시 이전에 계산된 매트릭스를 사용한다.\n    임의 매트릭스 설정도 가능\n",
    "example": "\n             (RedMesh Instance).autoUpdateMatrix = true;\n             (RedMesh Instance).autoUpdateMatrix = false;\n         ",
    "return": "boolean"
  },
  {
    "code": "PROPERTY",
    "title": "blendAlphaDst",
    "description": "\n\t 블렌드 목표값 factor\n\t 기본값 : gl.ONE_MINUS_SRC_ALPHA\n ",
    "example": "\n    var tGL = (RedGL Instance).gl;\n             (RedMesh Instance).blendAlphaDst = tGL.SRC_ALPHA;\n             (RedMesh Instance).blendAlphaDst = tGL.DST_ALPHA;\n          ",
    "return": "gl 상수"
  },
  {
    "code": "PROPERTY",
    "title": "blendAlphaSrc",
    "description": "\n\t 블렌드 소스값 factor\n\t 기본값 : gl.ONE\n ",
    "example": "\n    var tGL = (RedGL Instance).gl;\n             (RedMesh Instance).blendAlphaSrc = tGL.SRC_ALPHA;\n             (RedMesh Instance).blendAlphaSrc = tGL.DST_ALPHA;\n          ",
    "return": "gl 상수"
  },
  {
    "code": "PROPERTY",
    "title": "blendDst",
    "description": "\n\t 블렌드 목표값 factor\n\t 기본값 : gl.ONE_MINUS_SRC_ALPHA\n ",
    "example": "\n    var tGL = (RedGL Instance).gl;\n             (RedMesh Instance).blendDst = tGL.SRC_ALPHA;\n             (RedMesh Instance).blendDst = tGL.DST_ALPHA;\n          ",
    "return": "gl 상수"
  },
  {
    "code": "PROPERTY",
    "title": "blendSrc",
    "description": "\n\t 블렌드 소스값 factor\n\t 기본값 : gl.SRC_ALPHA\n ",
    "example": "\n    var tGL = (RedGL Instance).gl;\n             (RedMesh Instance).blendSrc = tGL.SRC_ALPHA;\n             (RedMesh Instance).blendSrc = tGL.DST_ALPHA;\n          ",
    "return": "gl 상수"
  },
  {
    "code": "PROPERTY",
    "title": "children",
    "description": "\n    자식 리스트\n ",
    "return": "Array"
  },
  {
    "code": "PROPERTY",
    "title": "cullFace",
    "description": "\n\t 컬링 페이스 설정\n\t 기본값 : gl.BACK\n ",
    "example": "\n    var tGL = (RedGL Instance).gl;\n             (RedMesh Instance).cullFace = tGL.BACK;\n             (RedMesh Instance).cullFace = tGL.FRONT;\n          ",
    "return": "gl 상수"
  },
  {
    "code": "PROPERTY",
    "title": "depthTestFunc",
    "description": "\n\t 뎁스 테스트 함수 설정\n\t 기본값 : gl.LEQUAL\n ",
    "example": "\n    var tGL = (RedGL Instance).gl;\n             (RedMesh Instance).depthTestFunc = tGL.LEQUAL;\n             (RedMesh Instance).depthTestFunc = tGL.LESS;\n          ",
    "return": "gl 상수"
  },
  {
    "title": "disposeAll",
    "code": "METHOD",
    "description": "\n\t 텍스쳐와 버퍼모두 dispose\n ",
    "return": "void"
  },
  {
    "title": "disposeAllBuffer",
    "code": "METHOD",
    "description": "\n\t 버퍼 전체 dispose\n ",
    "return": "void"
  },
  {
    "title": "disposeAllTexture",
    "code": "METHOD",
    "description": "\n\t 텍스쳐 전체 dispose\n ",
    "return": "void"
  },
  {
    "title": "disposeBuffer",
    "code": "METHOD",
    "description": "\n\t 텍스쳐 dispose,\n              'ex) indexBuffer'\n ",
    "params": {
      "key": [
        {
          "type": "String"
        }
      ]
    },
    "return": "void"
  },
  {
    "title": "disposeTexture",
    "code": "METHOD",
    "description": "\n\t 텍스쳐 dispose\n ",
    "params": {
      "key": [
        {
          "type": "String"
        },
        "ex) diffuseTexture"
      ]
    },
    "return": "void"
  },
  {
    "code": "PROPERTY",
    "title": "drawMode",
    "description": "\n\t 기본값 : gl.TRIANGLES\n\t drawCall시 적용한 드로잉 모드\n ",
    "example": "\n    var tGL = (RedGL Instance).gl;\n             (RedMesh Instance).drawMode = tGL.TRIANGLES;\n             (RedMesh Instance).drawMode = tGL.LINES;\n          ",
    "return": "gl 상수"
  },
  {
    "title": "geometry",
    "code": "PROPERTY",
    "description": "\n\t geometry\n ",
    "return": "RedGeometry Instance"
  },
  {
    "title": "getScreenPoint",
    "code": "METHOD",
    "description": "\n\t 객체의 중심 좌표를 스크린 좌표로 반환\n ",
    "params": {
      "redView": [
        {
          "type": "RedView"
        }
      ]
    },
    "example": "\n             (RedBaseObject3D Instance).getScreenPoint( RedView Instance );\n ",
    "return": "Array"
  },
  {
    "code": "PROPERTY",
    "title": "localMatrix",
    "description": "\n    계산된 로컬 메트릭스\n    matrix 렌더링시 자동계산\n",
    "return": "mat4"
  },
  {
    "title": "localToWorld",
    "code": "METHOD",
    "description": "\n\t 로컬좌표를 RedWorld 좌표로 변경\n ",
    "params": {
      "x": [
        {
          "type": "Number"
        }
      ],
      "y": [
        {
          "type": "Number"
        }
      ],
      "z": [
        {
          "type": "Number"
        }
      ]
    },
    "example": "\n             (RedBaseObject3D Instance).localToWorld(0,0,0); // 해당메쉬의 0,0,0을  RedWorld 상의 좌표로 반환\n ",
    "return": "Array"
  },
  {
    "code": "PROPERTY",
    "title": "lookAt",
    "description": "\n          lookAt\n ",
    "params": {
      "x": [
        {
          "type": "Number"
        }
      ],
      "y": [
        {
          "type": "Number"
        }
      ],
      "z": [
        {
          "type": "Number"
        }
      ]
    },
    "return": "void"
  },
  {
    "title": "material",
    "code": "PROPERTY",
    "description": "\n\t material\n ",
    "return": "RedMaterial Instance"
  },
  {
    "code": "PROPERTY",
    "title": "matrix",
    "description": "\n    계산된 누적 메트릭스\n    matrix 렌더링시 자동계산\n",
    "return": "mat4"
  },
  {
    "code": "PROPERTY",
    "title": "normalMatrix",
    "description": "\n    계산된 노멀 메트릭스\n    normalMatrix 렌더링시 자동계산\n",
    "return": "mat4"
  },
  {
    "code": "PROPERTY",
    "title": "outlineAlpha",
    "description": "\n    기본값 : 1\n    최소값 : 0\n    최대값 : 1\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "outlineColor",
    "description": "기본값 : #ff0000",
    "return": "hex"
  },
  {
    "code": "PROPERTY",
    "title": "outlineThickness",
    "description": "\n\t기본값 : 0\n\t최소값 : 0\n ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "pivotX",
    "description": "\n\t 기본값 : 0\n\t 피벗 포인트 X\n ",
    "example": "\n             (RedMesh Instance).pivotX = 1;\n          ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "pivotY",
    "description": "\n\t 기본값 : 0\n\t 피벗 포인트 Y\n ",
    "example": "\n             (RedMesh Instance).pivotY = 1;\n          ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "pivotZ",
    "description": "\n\t 기본값 : 0\n\t 피벗 포인트 Z\n ",
    "example": "\n             (RedMesh Instance).pivotZ = 1;\n          ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "pointSize",
    "description": "\n\t 기본값 : 1\n\t gl.POINTS로 그릴경우 반영될 포인트 사이즈.\n\t 성능을 위해서 getter/setter 설정이 되어있지 않음\n ",
    "example": "\n             (RedMesh Instance).pointSize = 1;\n             (RedMesh Instance).pointSize = 2;\n          ",
    "return": "Number"
  },
  {
    "constructorYn": true,
    "title": "RedBaseObject3D",
    "description": "\n\t RedBaseObject3D 기저층.\n ",
    "return": "RedBaseObject3D Instance"
  },
  {
    "title": "RedBaseObject3D.build",
    "code": "STATIC METHOD",
    "description": "\n\tRedBaseObject3D가 가지고있는 속성을 해당 인스턴스에 복사하기위해사용.\n ",
    "params": {
      "gl": [
        {
          "type": "glContext"
        }
      ]
    },
    "example": "\n var testMesh = function (redGL) {\n\t var tGL;\n\t tGL = redGL.gl;\n\t RedBaseObject3D['build'].call(this, tGL)\n }\n ",
    "return": "void"
  },
  {
    "title": "removeAllFilter",
    "code": "METHOD",
    "description": "\n\t\t모든 filter 제거\n\t",
    "return": "void"
  },
  {
    "title": "removeFilter",
    "code": "METHOD",
    "description": "\n\t\tfilter 제거\n\t",
    "params": {
      "filter": [
        {
          "type": "RedBaseFilter Instance"
        }
      ]
    },
    "return": "void"
  },
  {
    "title": "removeLOD",
    "code": "METHOD",
    "description": "LOD 삭제",
    "params": {
      "level": [
        {
          "type": "int"
        }
      ]
    },
    "example": "\n             var tMesh = RedBaseObject3D Instance;\n             tMesh.addLOD(0, 5, RedSphere(this, 0.5, 32, 32, 32), RedColorMaterial(this, '#00ff00')); // 0레벨 LOD 추가\n             tMesh.removeLOD(0); // 0레벨 LOD 삭제\n ",
    "return": "void"
  },
  {
    "code": "PROPERTY",
    "title": "rotationX",
    "description": "\n    rotationX 값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n ",
    "example": "\n          (RedMesh Instance).rotationX = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "rotationY",
    "description": "\n    rotationY 값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n       ",
    "example": "\n          (RedMesh Instance).rotationY = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "rotationZ",
    "description": "\n    rotationZ 값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n ",
    "example": "\n          (RedMesh Instance).rotationZ = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "scaleX",
    "description": "\n    scaleX 값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n ",
    "example": "\n          (RedMesh Instance).scaleX = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "scaleY",
    "description": "\n    scaleY 값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n       ",
    "example": "\n          (RedMesh Instance).scaleY = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "scaleZ",
    "description": "\n    scaleZ 값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n ",
    "example": "\n          (RedMesh Instance).scaleZ = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "useBlendMode",
    "description": "\n\t 블렌드 모드 사용여부\n\t 기본값 : true\n ",
    "example": "\n             (RedMesh Instance).useBlendMode = true;\n             (RedMesh Instance).useBlendMode = false;\n          ",
    "return": "Boolean"
  },
  {
    "code": "PROPERTY",
    "title": "useCullFace",
    "description": "\n\t 컬링 사용여부\n\t 기본값 : true\n ",
    "example": "\n             (RedMesh Instance).useCullFace = true;\n             (RedMesh Instance).useCullFace = false;\n          ",
    "return": "Boolean"
  },
  {
    "code": "PROPERTY",
    "title": "useDepthMask",
    "description": "\n\t 뎁스 마스크 사용여부\n\t 기본값 : true\n ",
    "example": "\n             (RedMesh Instance).useDepthMask = true;\n             (RedMesh Instance).useDepthMask = false;\n          ",
    "return": "Boolean"
  },
  {
    "code": "PROPERTY",
    "title": "useDepthTest",
    "description": "\n\t 뎁스 테스트 사용여부\n\t 기본값 : true\n ",
    "example": "\n             (RedMesh Instance).useDepthTest = true;\n             (RedMesh Instance).useDepthTest = false;\n          ",
    "return": "Boolean"
  },
  {
    "code": "PROPERTY",
    "title": "useLOD",
    "description": "LOD사용여부",
    "example": "\n             (RedMesh Instance).useLOD = true;\n             (RedMesh Instance).useLOD = false;\n          ",
    "return": "Boolean"
  },
  {
    "code": "PROPERTY",
    "title": "useTransparentSort",
    "description": "\n\t 투명도 소팅 여부. \n\t true 설정시 렌더링 진행과정중 최종적으로 모아서 그리게된다. (완벽하지 않지만 투명객체 소팅 효과를 얻을 수 있음)\n\t 기본값 : false\n ",
    "example": "\n             (RedMesh Instance).useTransparentSort = true;\n             (RedMesh Instance).useTransparentSort = false;\n          ",
    "return": "Boolean"
  },
  {
    "title": "worldToLocal",
    "code": "METHOD",
    "description": "\n\t RedWorld 좌표를 로컬좌표로 변환\n ",
    "params": {
      "x": [
        {
          "type": "Number"
        }
      ],
      "y": [
        {
          "type": "Number"
        }
      ],
      "z": [
        {
          "type": "Number"
        }
      ]
    },
    "example": "\n             (RedBaseObject3D Instance).worldToLocal(0,0,0); // RedWorld 상의 0,0,0을  로컬 좌표로 반환\n ",
    "return": "Array"
  },
  {
    "code": "PROPERTY",
    "title": "x",
    "description": "\n    x 좌표값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n      ",
    "example": "\n          (RedMesh Instance).x = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "y",
    "description": "\n    y 좌표값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n       ",
    "example": "\n          (RedMesh Instance).y = 0;\n       ",
    "return": "Number"
  },
  {
    "code": "PROPERTY",
    "title": "z",
    "description": "\n    z 좌표값\n    성능을 위해서 getter/setter 설정이 되어있지 않음\n ",
    "example": "\n          (RedMesh Instance).z = 0;\n       ",
    "return": "Number"
  }
]